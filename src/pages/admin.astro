---
import Layout from '../layouts/Layout.astro';
import { createClient } from '@supabase/supabase-js';

// Configuración de Supabase (reemplaza con tus credenciales)
const supabaseUrl = 'https://xriwpsgdfueorcsdzwla.supabase.co';
const supabaseKey = 'kI7BOmkQIIQ7UVoDztkwsdUf3rQTr3etttM+1FsmBZjTj7/vOzT3pemAVW/Ufqkw3/Wlq5W3y4yw+feWp9SvkQ==';
const supabase = createClient(supabaseUrl, supabaseKey);

// Obtener uniformes existentes para mostrar en la tabla
let uniformes = [];
try {
  const { data, error } = await supabase
    .from('uniformes')
    .select('*')
    .order('created_at', { ascending: false });
  
  if (error) {
    console.error('Error al obtener uniformes:', error);
  } else {
    uniformes = data || [];
  }
} catch (error) {
  console.error('Error de conexión:', error);
}
---

<Layout title="Administración de Uniformes">
  <main class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-8">
      <h1 class="text-4xl font-bold text-gray-800">
        Administración de Uniformes
      </h1>
      <button 
        id="toggle-form" 
        class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors duration-200"
      >
        <svg class="inline h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
        </svg>
        Agregar Uniforme
      </button>
    </div>

    <!-- Formulario para agregar/editar uniformes -->
    <div id="form-container" class="hidden mb-8">
      <div class="bg-white rounded-lg shadow-lg p-6">
        <h2 id="form-title" class="text-2xl font-semibold mb-6 text-gray-800">Agregar Nuevo Uniforme</h2>
        
        <form id="uniforme-form" class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Nombre -->
            <div>
              <label for="nombre" class="block text-sm font-medium text-gray-700 mb-2">
                Nombre del Uniforme *
              </label>
              <input 
                type="text" 
                id="nombre" 
                name="nombre" 
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="Ej: Camisa escolar manga larga"
              />
            </div>

            <!-- Género -->
            <div>
              <label for="genero" class="block text-sm font-medium text-gray-700 mb-2">
                Género *
              </label>
              <select 
                id="genero" 
                name="genero" 
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="">Seleccionar género</option>
                <option value="hombre">Hombre</option>
                <option value="mujer">Mujer</option>
                <option value="unisex">Unisex</option>
              </select>
            </div>

            <!-- Tallas -->
            <div>
              <label for="tallas" class="block text-sm font-medium text-gray-700 mb-2">
                Tallas Disponibles *
              </label>
              <input 
                type="text" 
                id="tallas" 
                name="tallas" 
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="Ej: XS, S, M, L, XL"
              />
              <p class="text-xs text-gray-500 mt-1">Separar tallas con comas</p>
            </div>

            <!-- Precio -->
            <div>
              <label for="precio" class="block text-sm font-medium text-gray-700 mb-2">
                Precio *
              </label>
              <input 
                type="number" 
                id="precio" 
                name="precio" 
                min="0" 
                step="0.01"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="0.00"
              />
            </div>

            <!-- Stock -->
            <div>
              <label for="stock" class="block text-sm font-medium text-gray-700 mb-2">
                Stock *
              </label>
              <input 
                type="number" 
                id="stock" 
                name="stock" 
                min="0"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="0"
              />
            </div>

            <!-- Imagen Hombre -->
            <div>
              <label for="imagen_hombre" class="block text-sm font-medium text-gray-700 mb-2">
                URL Imagen Hombre
              </label>
              <input 
                type="url" 
                id="imagen_hombre" 
                name="imagen_hombre"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="https://ejemplo.com/imagen-hombre.jpg"
              />
            </div>

            <!-- Imagen Mujer -->
            <div>
              <label for="imagen_mujer" class="block text-sm font-medium text-gray-700 mb-2">
                URL Imagen Mujer
              </label>
              <input 
                type="url" 
                id="imagen_mujer" 
                name="imagen_mujer"
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                placeholder="https://ejemplo.com/imagen-mujer.jpg"
              />
            </div>
          </div>

          <!-- Botones -->
          <div class="flex justify-end space-x-4 pt-6 border-t">
            <button 
              type="button" 
              id="cancel-btn"
              class="px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 font-medium transition-colors duration-200"
            >
              Cancelar
            </button>
            <button 
              type="submit" 
              class="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md font-medium transition-colors duration-200"
            >
              <span id="submit-text">Guardar Uniforme</span>
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Tabla de uniformes existentes -->
    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-800">Uniformes Registrados</h3>
      </div>
      
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Uniforme
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Género
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Tallas
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Precio
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Stock
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Acciones
              </th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {uniformes.length === 0 ? (
              <tr>
                <td colspan="6" class="px-6 py-12 text-center text-gray-500">
                  <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                  </svg>
                  <p class="text-lg font-medium">No hay uniformes registrados</p>
                  <p class="text-sm">Comienza agregando tu primer uniforme</p>
                </td>
              </tr>
            ) : (
              uniformes.map((uniforme) => (
                <tr class="hover:bg-gray-50">
                  <td class="px-6 py-4">
                    <div class="flex items-center">
                      <div class="flex-shrink-0 h-10 w-10">
                        {uniforme.imagen_hombre || uniforme.imagen_mujer ? (
                          <img 
                            class="h-10 w-10 rounded-lg object-cover" 
                            src={uniforme.imagen_hombre || uniforme.imagen_mujer} 
                            alt={uniforme.nombre}
                          />
                        ) : (
                          <div class="h-10 w-10 rounded-lg bg-gray-200 flex items-center justify-center">
                            <svg class="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                          </div>
                        )}
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">{uniforme.nombre}</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800 capitalize">
                      {uniforme.genero}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {uniforme.tallas}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                    ${uniforme.precio?.toLocaleString('es-ES') || 'N/A'}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                      uniforme.stock > 10 
                        ? 'bg-green-100 text-green-800' 
                        : uniforme.stock > 0 
                        ? 'bg-yellow-100 text-yellow-800' 
                        : 'bg-red-100 text-red-800'
                    }`}>
                      {uniforme.stock}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                    <button 
                      class="text-blue-600 hover:text-blue-900 edit-btn"
                      data-id={uniforme.id}
                      data-uniforme={JSON.stringify(uniforme)}
                    >
                      Editar
                    </button>
                    <button 
                      class="text-red-600 hover:text-red-900 delete-btn"
                      data-id={uniforme.id}
                      data-nombre={uniforme.nombre}
                    >
                      Eliminar
                    </button>
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
    </div>

    <!-- Mensajes de notificación -->
    <div id="notification" class="fixed top-4 right-4 z-50 hidden">
      <div class="bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg">
        <span id="notification-message">Operación completada exitosamente</span>
      </div>
    </div>
  </main>

  <script>
    // Configuración de Supabase (del lado del cliente)
const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;

    
    // Elementos del DOM
    const toggleForm = document.getElementById('toggle-form');
    const formContainer = document.getElementById('form-container');
    const uniformeForm = document.getElementById('uniforme-form');
    const formTitle = document.getElementById('form-title');
    const submitText = document.getElementById('submit-text');
    const cancelBtn = document.getElementById('cancel-btn');
    const notification = document.getElementById('notification');
    const notificationMessage = document.getElementById('notification-message');
    
    let editingId = null;
    
    // Event Listeners
    toggleForm.addEventListener('click', () => {
      formContainer.classList.toggle('hidden');
      if (!formContainer.classList.contains('hidden')) {
        resetForm();
      }
    });
    
    cancelBtn.addEventListener('click', () => {
      formContainer.classList.add('hidden');
      resetForm();
    });
    
    uniformeForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      await handleSubmit();
    });
    
    // Botones de editar
    document.querySelectorAll('.edit-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        const uniforme = JSON.parse(e.target.dataset.uniforme);
        editUniforme(uniforme);
      });
    });
    
    // Botones de eliminar
    document.querySelectorAll('.delete-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        const id = e.target.dataset.id;
        const nombre = e.target.dataset.nombre;
        deleteUniforme(id, nombre);
      });
    });
    
    async function handleSubmit() {
      const formData = new FormData(uniformeForm);
      const uniformeData = {
        nombre: formData.get('nombre'),
        genero: formData.get('genero'),
        tallas: formData.get('tallas')
          ? formData.get('tallas').split(',').map(t => t.trim()).filter(Boolean)
          : [],
        precio: parseFloat(formData.get('precio')),
        stock: parseInt(formData.get('stock')),
        imagen_hombre: formData.get('imagen_hombre') || null,
        imagen_mujer: formData.get('imagen_mujer') || null
      };
      
      try {
        const response = await fetch('/api/uniforme', {
          method: editingId ? 'PUT' : 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(editingId ? { ...uniformeData, id: editingId } : uniformeData)
        });
        
        if (response.ok) {
          showNotification(editingId ? 'Uniforme actualizado exitosamente' : 'Uniforme agregado exitosamente', 'success');
          formContainer.classList.add('hidden');
          resetForm();
          // Recargar la página para mostrar los cambios
          setTimeout(() => {
            window.location.reload();
          }, 1500);
        } else {
          const errorData = await response.json();
          const errorMsg = errorData?.detalle || errorData?.error || 'Error en la operación';
          showNotification(errorMsg, 'error');
          throw new Error(errorMsg);
        }
      } catch (error) {
        console.error('Error:', error);
        showNotification('Error al procesar la operación', 'error');
      }
    }
    
    function editUniforme(uniforme) {
      editingId = uniforme.id;
      formTitle.textContent = 'Editar Uniforme';
      submitText.textContent = 'Actualizar Uniforme';
      
      // Llenar el formulario con los datos existentes
      document.getElementById('nombre').value = uniforme.nombre;
      document.getElementById('genero').value = uniforme.genero;
      document.getElementById('tallas').value = uniforme.tallas;
      document.getElementById('precio').value = uniforme.precio;
      document.getElementById('stock').value = uniforme.stock;
      document.getElementById('imagen_hombre').value = uniforme.imagen_hombre || '';
      document.getElementById('imagen_mujer').value = uniforme.imagen_mujer || '';
      
      formContainer.classList.remove('hidden');
    }
    
    async function deleteUniforme(id, nombre) {
      if (!confirm(`¿Estás seguro de que deseas eliminar "${nombre}"?`)) {
        return;
      }
      
      try {
        const response = await fetch('/api/uniforme', {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ id })
        });
        
        if (response.ok) {
          showNotification('Uniforme eliminado exitosamente', 'success');
          setTimeout(() => {
            window.location.reload();
          }, 1500);
        } else {
          throw new Error('Error al eliminar');
        }
      } catch (error) {
        console.error('Error:', error);
        showNotification('Error al eliminar el uniforme', 'error');
      }
    }
    
    function resetForm() {
      editingId = null;
      formTitle.textContent = 'Agregar Nuevo Uniforme';
      submitText.textContent = 'Guardar Uniforme';
      uniformeForm.reset();
    }
    
    function showNotification(message, type = 'success') {
      notificationMessage.textContent = message;
      notification.classList.remove('hidden');
      
      const notificationDiv = notification.querySelector('div');
      notificationDiv.className = type === 'success' 
        ? 'bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg'
        : 'bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg';
      
      setTimeout(() => {
        notification.classList.add('hidden');
      }, 3000);
    }
  </script>
</Layout>